//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace TravianBot.Core.Models
{
    using Common;
    using System;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Linq;
    using System.Linq.Expressions;
    using System.Text;
    using TravianBot.Core;

    public class Village : DB_Village
    {
        private int villageId;
        private string villageName;
        private int x;
        private int y;
        private bool isActive;
        private bool isCapital;
        private ObservableCollection<Building> buildings;

        private new int DB_Id { get; set; }
        public new int VillageId
		{
            get
            {
                return villageId;
            }
            set
            {
                Set(() => VillageId, ref villageId, value);
            }
		}
		public new string VillageName
		{
            get
            {
                return villageName;
            }
            set
            {
                Set(() => VillageName, ref villageName, value);
            }
        }
		public new int X
		{
            get
            {
                return x;
            }
            set
            {
                Set(() => X, ref x, value);
            }
        }
		public new int Y
		{
            get
            {
                return y;
            }
            set
            {
                Set(() => Y, ref y, value);
            }
        }
		public bool IsActive
		{
            get
            {
                return isActive;
            }
            set
            {
                Set(() => IsActive, ref isActive, value);
            }
        }
		public new bool IsCapital
		{
            get
            {
                return isCapital;
            }
            set
            {
                Set(() => IsCapital, ref isCapital, value);
            }
        }
		public ObservableCollection<Building> Buildings
		{
            get
            {
                return buildings;
            }
            set
            {
                Set(() => Buildings, ref buildings, value);
            }
        }

        public override bool Equals(object otherObject)
        {
            var other = otherObject as Village;
            if (other == null)
                return false;

            bool result = true;
            result = result && VillageId == other.VillageId;
            result = result && VillageName == other.VillageName;
            result = result && X == other.X;
            result = result && Y == other.Y;
            result = result && IsCapital == IsCapital;

            return result;
        }

        public bool UpdatePropertyIfNotEquals<TProperty>(
            Expression<Func<Village, TProperty>> PropertyExpression, TProperty newValue)
        {
            var info = Util.GetPropertyInfo(this, PropertyExpression);

            if (!info.CanRead)
                throw new Exception("Property can not be read.");
            if (!info.CanWrite)
                throw new Exception("Property can not be write.");
            if (info.GetValue(this) != null && !(info.GetValue(this) is TProperty))
                throw new Exception("Type of property and newValuew are different.");

            var oldValue = (TProperty)info.GetValue(this);
            if (oldValue != null && oldValue.Equals(newValue))
                return false;

            info.SetValue(this, newValue);
            return true;
        }

    }

    public partial class DB_Village : GalaSoft.MvvmLight.ObservableObject
    {

    }
}

